
function BS = BS(Col, Row, Radius)
% BS - Generate a grid of base stations (BS) using an even-q vertical hexagonal layout.
%
% Syntax:
%   BS = BS(Col, Row, Radius)
%
% Inputs:
%   Col    - Number of base stations per column
%   Row    - Number of rows in the grid
%   Radius - Radius of each hexagonal cell
%
% Outputs:
%   BS     - Struct array of base stations with fields:
%              .X        - X-coordinate of the BS center
%              .Y        - Y-coordinate of the BS center
%              .RusCell  - Reuse cell ID (values cycle through 1, 2, 3)
%
% Description:
%   This function calculates the positions of base stations arranged in a 
%   hexagonal layout (even-q vertical orientation). Each BS is assigned a
%   reuse cell ID (1, 2, or 3) for frequency reuse planning.

    % Horizontal and vertical spacing between hex centers
    W = 2 * Radius;           % Width of a hexagon (flat-to-flat)
    H = sqrt(3) * Radius;     % Height of a hexagon (point-to-point)

    % --- First two rows are initialized explicitly ---

    % First row (Row 1): Aligned vertically
    for i = 1:Col
        BS(1, i).X = 0.75 * W;
        BS(1, i).Y = i * H;
        BS(1, i).RusCell = mod(i + 1, 3) + 1;  % Cycles through 1, 2, 3
    end

    % Second row (Row 2): Shifted vertically by half a cell
    for i = 1:Col
        BS(2, i).X = 1.5 * W;
        BS(2, i).Y = 0.5 * H + (i - 1) * H;
        BS(2, i).RusCell = mod(i - 1, 3) + 1;  % Cycles through 1, 2, 3
    end

    % --- Remaining rows are generated by copying pattern from two rows above ---
    for i = 3:Row
        for j = 1:Col
            BS(i, j).X = BS(i - 2, j).X + 1.5 * W;
            BS(i, j).Y = BS(i - 2, j).Y;
            BS(i, j).RusCell = BS(i - 2, j).RusCell;
        end
    end
end







